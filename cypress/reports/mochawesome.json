{
  "stats": {
    "suites": 12,
    "tests": 41,
    "passes": 31,
    "pending": 0,
    "failures": 10,
    "start": "2021-07-29T13:45:53.674Z",
    "end": "2021-07-29T13:46:49.597Z",
    "duration": 55923,
    "testsRegistered": 41,
    "passPercent": 75.60975609756098,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "94fb8e07-db09-48db-8545-f83c8e706e55",
      "title": "",
      "fullFile": "cypress/integration/project.spec.js",
      "file": "cypress/integration/project.spec.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "081128c7-2598-49e5-8419-cb351f6c4ebf",
          "title": "1 - Adicione à página o título \"Paleta de Cores\".",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se contém um elemento `h1` com o id `title` com o título correto",
              "fullTitle": "1 - Adicione à página o título \"Paleta de Cores\". Verifica se contém um elemento `h1` com o id `title` com o título correto",
              "timedOut": null,
              "duration": 167,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('h1#title').should('contain.text', 'Paleta de Cores');",
              "err": {},
              "uuid": "6145b5a1-07f1-46c7-beac-d5a9050b5aac",
              "parentUUID": "081128c7-2598-49e5-8419-cb351f6c4ebf",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "6145b5a1-07f1-46c7-beac-d5a9050b5aac"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 167,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "d774d66d-0806-4bf1-a11a-97bc7b8937b5",
          "title": "2 - Adicione à página uma paleta de quatro cores distintas.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "A paleta de cores deve ser um elemento com `id` denominado `color-palette`",
              "fullTitle": "2 - Adicione à página uma paleta de quatro cores distintas. A paleta de cores deve ser um elemento com `id` denominado `color-palette`",
              "timedOut": null,
              "duration": 80,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('#color-palette').should('be.visible');",
              "err": {},
              "uuid": "dc881547-ad11-47e6-b64e-ef71aab392df",
              "parentUUID": "d774d66d-0806-4bf1-a11a-97bc7b8937b5",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se cada cor individual da paleta de cores possui a `classe` chamada `color`.",
              "fullTitle": "2 - Adicione à página uma paleta de quatro cores distintas. Verifica se cada cor individual da paleta de cores possui a `classe` chamada `color`.",
              "timedOut": null,
              "duration": 117,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').should('have.length', 4).then(function (colors) {\n  for (var i = 0; i < colors.length; i++) {\n    cy.wrap(colors[i]).should('be.visible');\n  }\n});",
              "err": {},
              "uuid": "4dcb641f-0fd0-48c3-8ff5-eb73c5f53826",
              "parentUUID": "d774d66d-0806-4bf1-a11a-97bc7b8937b5",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se a cor de fundo de cada elemento da paleta é a cor que o elemento representa. **A única cor não permitida na paleta é a cor branca.**",
              "fullTitle": "2 - Adicione à página uma paleta de quatro cores distintas. Verifica se a cor de fundo de cada elemento da paleta é a cor que o elemento representa. **A única cor não permitida na paleta é a cor branca.**",
              "timedOut": null,
              "duration": 109,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').each(function (color) {\n  cy.wrap(color).should('have.class', 'color').and('not.have.css', 'background-color', WHITE);\n  cy.wrap(color).should('have.css', 'background-color');\n});",
              "err": {},
              "uuid": "f57d0413-8065-49d9-bd5f-7882ab41ce32",
              "parentUUID": "d774d66d-0806-4bf1-a11a-97bc7b8937b5",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se cada elemento da paleta de cores tem uma borda preta, sólida e com 1 pixel de largura;",
              "fullTitle": "2 - Adicione à página uma paleta de quatro cores distintas. Verifica se cada elemento da paleta de cores tem uma borda preta, sólida e com 1 pixel de largura;",
              "timedOut": null,
              "duration": 110,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').each(function (color) {\n  cy.wrap(color).and('have.css', 'border', \"1px solid \".concat(BLACK)).and('have.class', 'color');\n});",
              "err": {},
              "uuid": "24e00e2d-f846-4fd2-9987-5676984a838c",
              "parentUUID": "d774d66d-0806-4bf1-a11a-97bc7b8937b5",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se a paleta lista todas as cores disponíveis para utilização, lado a lado.",
              "fullTitle": "2 - Adicione à página uma paleta de quatro cores distintas. Verifica se a paleta lista todas as cores disponíveis para utilização, lado a lado.",
              "timedOut": null,
              "duration": 107,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').then(function (colors) {\n  for (var index = 1; index < colors.length; index += 1) {\n    var currentColor = colors[index];\n    var previousColor = colors[index - 1];\n    cy.wrap(currentColor).should('be.onTheRightOf', previousColor).and('be.horizontallyAlignedWith', previousColor);\n  }\n});",
              "err": {},
              "uuid": "0c485c1a-fd3e-48d2-8bec-5a663f28e98a",
              "parentUUID": "d774d66d-0806-4bf1-a11a-97bc7b8937b5",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se a paleta de cores está posicionada abaixo do título 'Paleta de Cores'",
              "fullTitle": "2 - Adicione à página uma paleta de quatro cores distintas. Verifica se a paleta de cores está posicionada abaixo do título 'Paleta de Cores'",
              "timedOut": null,
              "duration": 97,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('h1#title').then(function (title) {\n  cy.get('#color-palette').should('be.belowOf', title);\n});",
              "err": {},
              "uuid": "c2f84989-cec6-4464-9862-b974c89d2bf1",
              "parentUUID": "d774d66d-0806-4bf1-a11a-97bc7b8937b5",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se a paleta de cores não contém cores repetidas.",
              "fullTitle": "2 - Adicione à página uma paleta de quatro cores distintas. Verifica se a paleta de cores não contém cores repetidas.",
              "timedOut": null,
              "duration": 102,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').then(function (colors) {\n  var allColors = Array.from(colors).map(function (color) {\n    return Cypress.$(color).css('background-color');\n  });\n  cy.log(allColors);\n  var uniqColors = (0, _toConsumableArray2[\"default\"])(new Set(allColors));\n  cy.log(uniqColors);\n  expect(allColors.length).to.eq(uniqColors.length);\n});",
              "err": {},
              "uuid": "4b555ef2-35c4-48e2-97fc-cf3d79ae2523",
              "parentUUID": "d774d66d-0806-4bf1-a11a-97bc7b8937b5",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "dc881547-ad11-47e6-b64e-ef71aab392df",
            "4dcb641f-0fd0-48c3-8ff5-eb73c5f53826",
            "f57d0413-8065-49d9-bd5f-7882ab41ce32",
            "24e00e2d-f846-4fd2-9987-5676984a838c",
            "0c485c1a-fd3e-48d2-8bec-5a663f28e98a",
            "c2f84989-cec6-4464-9862-b974c89d2bf1",
            "4b555ef2-35c4-48e2-97fc-cf3d79ae2523"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 722,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "1d3ec394-2e63-41e6-94d9-a175565576fa",
          "title": "3 - Adicione a cor **preta** como a primeira cor da paleta de cores.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se a primeira cor da paleta é preta",
              "fullTitle": "3 - Adicione a cor **preta** como a primeira cor da paleta de cores. Verifica se a primeira cor da paleta é preta",
              "timedOut": null,
              "duration": 82,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').first().should('have.css', 'background-color', BLACK);",
              "err": {},
              "uuid": "2ceab64f-49f1-42e4-9916-d33fe78b9043",
              "parentUUID": "1d3ec394-2e63-41e6-94d9-a175565576fa",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se as demais cores podem ser escolhidas livremente.",
              "fullTitle": "3 - Adicione a cor **preta** como a primeira cor da paleta de cores. Verifica se as demais cores podem ser escolhidas livremente.",
              "timedOut": null,
              "duration": 162,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').eq(1).should('not.have.css', 'background-color', BLACK);\ncy.get('.color').eq(1).should('not.have.css', 'background-color', WHITE);\ncy.get('.color').eq(1).should('not.have.css', 'background-color', 'rgba(0, 0, 0, 0)');\ncy.get('.color').eq(1).should('have.css', 'background-color');\ncy.get('.color').eq(2).should('not.have.css', 'background-color', BLACK);\ncy.get('.color').eq(2).should('not.have.css', 'background-color', WHITE);\ncy.get('.color').eq(2).should('not.have.css', 'background-color', 'rgba(0, 0, 0, 0)');\ncy.get('.color').eq(2).should('have.css', 'background-color');\ncy.get('.color').eq(3).should('not.have.css', 'background-color', BLACK);\ncy.get('.color').eq(3).should('not.have.css', 'background-color', WHITE);\ncy.get('.color').eq(3).should('not.have.css', 'background-color', 'rgba(0, 0, 0, 0)');\ncy.get('.color').eq(3).should('have.css', 'background-color');",
              "err": {},
              "uuid": "ec8d740d-2533-4c45-b5bd-f4a0e427a3e8",
              "parentUUID": "1d3ec394-2e63-41e6-94d9-a175565576fa",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "2ceab64f-49f1-42e4-9916-d33fe78b9043",
            "ec8d740d-2533-4c45-b5bd-f4a0e427a3e8"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 244,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "9d784d79-c547-4ba8-87fc-889db1d5543b",
          "title": "4 - Adicione à página um quadro de pixels, com 25 pixels.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se o quadro de pixels possui o `id` denominado `pixel-board`",
              "fullTitle": "4 - Adicione à página um quadro de pixels, com 25 pixels. Verifica se o quadro de pixels possui o `id` denominado `pixel-board`",
              "timedOut": null,
              "duration": 70,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('#pixel-board').should('be.visible');",
              "err": {},
              "uuid": "8a6f9372-cf16-4f66-b706-07584be323b2",
              "parentUUID": "9d784d79-c547-4ba8-87fc-889db1d5543b",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se cada pixel individual dentro do quadro possui a `classe` denominada `pixel`.",
              "fullTitle": "4 - Adicione à página um quadro de pixels, com 25 pixels. Verifica se cada pixel individual dentro do quadro possui a `classe` denominada `pixel`.",
              "timedOut": null,
              "duration": 89,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.pixel').should('have.length', 25);",
              "err": {},
              "uuid": "fd41af98-a52e-4f04-9caa-f5862e602c81",
              "parentUUID": "9d784d79-c547-4ba8-87fc-889db1d5543b",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se a cor inicial dos pixels dentro do quadro, ao abrir a página, é branca.",
              "fullTitle": "4 - Adicione à página um quadro de pixels, com 25 pixels. Verifica se a cor inicial dos pixels dentro do quadro, ao abrir a página, é branca.",
              "timedOut": null,
              "duration": 156,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.pixel').should('have.length', 25).each(function (pixel) {\n  expect(pixel).to.have.css('background-color', WHITE);\n});",
              "err": {},
              "uuid": "ea153d5e-fceb-4fb4-96c8-71110e4130f4",
              "parentUUID": "9d784d79-c547-4ba8-87fc-889db1d5543b",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se o quadro de pixels aparece abaixo da paleta de cores",
              "fullTitle": "4 - Adicione à página um quadro de pixels, com 25 pixels. Verifica se o quadro de pixels aparece abaixo da paleta de cores",
              "timedOut": null,
              "duration": 70,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('#color-palette').then(function (palette) {\n  cy.get('#pixel-board').should('be.belowOf', palette);\n});",
              "err": {},
              "uuid": "c29d3738-3873-444e-bb10-2b27a391a80a",
              "parentUUID": "9d784d79-c547-4ba8-87fc-889db1d5543b",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "8a6f9372-cf16-4f66-b706-07584be323b2",
            "fd41af98-a52e-4f04-9caa-f5862e602c81",
            "ea153d5e-fceb-4fb4-96c8-71110e4130f4",
            "c29d3738-3873-444e-bb10-2b27a391a80a"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 385,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "cb76a540-699f-438c-9bf8-fa0064dc82f8",
          "title": "5 - Faça com que cada elemento do quadro de pixels possua 40 pixels de largura, 40 pixels de altura e seja delimitado por uma borda preta de 1 pixel.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se o quadro de pixels tem altura e comprimento de 5 elementos",
              "fullTitle": "5 - Faça com que cada elemento do quadro de pixels possua 40 pixels de largura, 40 pixels de altura e seja delimitado por uma borda preta de 1 pixel. Verifica se o quadro de pixels tem altura e comprimento de 5 elementos",
              "timedOut": null,
              "duration": 385,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('.pixel').should('have.length', 25).each(function (pixel) {\n  expect(pixel).to.have.css('background-color', WHITE);\n}).and(function (pixels) {\n  var rows = chunk(pixels, 5);\n  rows.forEach(function (row) {\n    for (var index = 1; index < row.length; index += 1) {\n      var current = pixels[index];\n      var previous = pixels[index - 1];\n      cy.wrap(current).should('be.onTheRightOf', previous).and('be.horizontallyAlignedWith', previous);\n    }\n  });\n  for (var index = 1; index < 5; index += 1) {\n    expect(pixels[index * 5]).to.be.belowOf(pixels[(index - 1) * 5]);\n  }\n});",
              "err": {
                "message": "AssertionError: expected '<div.pixel>' to be below of <div class=\"pixel\" style=\"background-color: white;\"></div>",
                "estack": "AssertionError: expected '<div.pixel>' to be below of <div class=\"pixel\" style=\"background-color: white;\"></div>\n    at http://localhost:34283/__cypress/runner/cypress_runner.js:136161:17\n    at tryCatcher (http://localhost:34283/__cypress/runner/cypress_runner.js:167415:23)\n    at Function.Promise.attempt.Promise.try (http://localhost:34283/__cypress/runner/cypress_runner.js:164690:29)\n    at Context.shouldFnWithCallback (http://localhost:34283/__cypress/runner/cypress_runner.js:136158:23)\n    at Context.shouldFn (http://localhost:34283/__cypress/runner/cypress_runner.js:136167:35)\n    at Context.and (http://localhost:34283/__cypress/runner/cypress_runner.js:136265:23)\n    at Context.<anonymous> (http://localhost:34283/__cypress/runner/cypress_runner.js:148875:21)\n    at http://localhost:34283/__cypress/runner/cypress_runner.js:148351:33\n    at tryCatcher (http://localhost:34283/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:34283/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:34283/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromiseCtx (http://localhost:34283/__cypress/runner/cypress_runner.js:165445:10)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:34283/__cypress/runner/cypress_runner.js:162145:12)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:34283/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:34283/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": ""
              },
              "uuid": "499d2ed4-d51d-42fb-8b5a-49988c751648",
              "parentUUID": "cb76a540-699f-438c-9bf8-fa0064dc82f8",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se 40 pixels é o tamanho total do elemento, incluindo seu conteúdo e excluindo a borda preta, que deve ser criada à parte.",
              "fullTitle": "5 - Faça com que cada elemento do quadro de pixels possua 40 pixels de largura, 40 pixels de altura e seja delimitado por uma borda preta de 1 pixel. Verifica se 40 pixels é o tamanho total do elemento, incluindo seu conteúdo e excluindo a borda preta, que deve ser criada à parte.",
              "timedOut": null,
              "duration": 300,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.pixel').each(function (pixel) {\n  cy.wrap(pixel).should('have.css', 'height', '40px').and('have.css', 'width', '40px').and('have.css', 'border', \"1px solid \".concat(BLACK));\n});",
              "err": {},
              "uuid": "ca14e9dd-eb31-4655-bffb-49b690c4081f",
              "parentUUID": "cb76a540-699f-438c-9bf8-fa0064dc82f8",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "ca14e9dd-eb31-4655-bffb-49b690c4081f"
          ],
          "failures": [
            "499d2ed4-d51d-42fb-8b5a-49988c751648"
          ],
          "pending": [],
          "skipped": [],
          "duration": 685,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "9aacacd7-9472-4105-82ce-374cb3ba1040",
          "title": "6 - Defina a cor preta como cor inicial. Ao carregar a página a cor preta já deve estar selecionada para pintar os pixels",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se o elemento da cor preta possui, inicialmente, a `classe` `selected`",
              "fullTitle": "6 - Defina a cor preta como cor inicial. Ao carregar a página a cor preta já deve estar selecionada para pintar os pixels Verifica se o elemento da cor preta possui, inicialmente, a `classe` `selected`",
              "timedOut": null,
              "duration": 75,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.selected').first().should('have.css', 'background-color', BLACK);",
              "err": {},
              "uuid": "80976296-5ca8-4092-98f4-d9e45b1f102a",
              "parentUUID": "9aacacd7-9472-4105-82ce-374cb3ba1040",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se nenhuma outra cor da paleta tem a `classe` `selected`",
              "fullTitle": "6 - Defina a cor preta como cor inicial. Ao carregar a página a cor preta já deve estar selecionada para pintar os pixels Verifica se nenhuma outra cor da paleta tem a `classe` `selected`",
              "timedOut": null,
              "duration": 98,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color:not(:first-child)').each(function (color) {\n  cy.wrap(color).should('not.have.class', 'selected');\n});",
              "err": {},
              "uuid": "0396686c-a0b2-4273-992b-09d4eb104816",
              "parentUUID": "9aacacd7-9472-4105-82ce-374cb3ba1040",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "80976296-5ca8-4092-98f4-d9e45b1f102a",
            "0396686c-a0b2-4273-992b-09d4eb104816"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 173,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "1b064b98-ac91-4042-b3c3-77477e5f7de0",
          "title": "7 - Clicar em uma das cores da paleta, faz com que ela seja selecionada e utilizada para preencher os pixels no quadro.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se somente uma cor da paleta de cores tem a classe `selected` de cada vez",
              "fullTitle": "7 - Clicar em uma das cores da paleta, faz com que ela seja selecionada e utilizada para preencher os pixels no quadro. Verifica se somente uma cor da paleta de cores tem a classe `selected` de cada vez",
              "timedOut": null,
              "duration": 519,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').each(function (selectedColor, selectedColorIndex) {\n  cy.wrap(selectedColor).click();\n  cy.get('.color').each(function (color, colorIndex) {\n    if (colorIndex === selectedColorIndex) {\n      expect(color).to.have[\"class\"]('selected');\n    } else {\n      expect(color).not.to.have[\"class\"]('selected');\n    }\n  });\n});",
              "err": {},
              "uuid": "b0770f12-3c6d-4cc6-9427-81c62333744a",
              "parentUUID": "1b064b98-ac91-4042-b3c3-77477e5f7de0",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se os pixels dentro do quadro não têm a classe `selected` quando são clicados",
              "fullTitle": "7 - Clicar em uma das cores da paleta, faz com que ela seja selecionada e utilizada para preencher os pixels no quadro. Verifica se os pixels dentro do quadro não têm a classe `selected` quando são clicados",
              "timedOut": null,
              "duration": 8641,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').each(function (color) {\n  var backgroundColor = color.css('background-color');\n  cy.wrap(color).click();\n  cy.get('.pixel').each(function (pixel) {\n    cy.wrap(pixel).click().should('not.have.class', 'selected');\n  });\n});",
              "err": {},
              "uuid": "3d46f0fe-62cd-4408-9487-0af0a054dd4c",
              "parentUUID": "1b064b98-ac91-4042-b3c3-77477e5f7de0",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "b0770f12-3c6d-4cc6-9427-81c62333744a",
            "3d46f0fe-62cd-4408-9487-0af0a054dd4c"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 9160,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "2c84ee9b-1429-4170-819c-595d1659bf86",
          "title": "8 - Clicar em um pixel dentro do quadro após selecionar uma cor na paleta, faz com que o pixel seja preenchido com a cor selecionada.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se ao carregar a página deve ser possível pintar os pixels de preto",
              "fullTitle": "8 - Clicar em um pixel dentro do quadro após selecionar uma cor na paleta, faz com que o pixel seja preenchido com a cor selecionada. Verifica se ao carregar a página deve ser possível pintar os pixels de preto",
              "timedOut": null,
              "duration": 2129,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.pixel').each(function (pixel) {\n  cy.wrap(pixel).click().should('have.css', 'background-color', BLACK);\n});",
              "err": {},
              "uuid": "4962046f-9b4a-48e6-82be-fb2b15ddd57a",
              "parentUUID": "2c84ee9b-1429-4170-819c-595d1659bf86",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se após selecionar uma outra cor na paleta, é possível pintar os pixels com essa cor",
              "fullTitle": "8 - Clicar em um pixel dentro do quadro após selecionar uma cor na paleta, faz com que o pixel seja preenchido com a cor selecionada. Verifica se após selecionar uma outra cor na paleta, é possível pintar os pixels com essa cor",
              "timedOut": null,
              "duration": 8611,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').each(function (color) {\n  var backgroundColor = color.css('background-color');\n  cy.wrap(color).click();\n  cy.get('.pixel').each(function (pixel) {\n    cy.wrap(pixel).click().should('have.css', 'background-color', backgroundColor);\n  });\n});",
              "err": {},
              "uuid": "e801c5a6-8c03-4f31-8c4f-d17b703b164f",
              "parentUUID": "2c84ee9b-1429-4170-819c-595d1659bf86",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se somente o pixel que foi clicado foi preenchido com a cor selecionada, sem influenciar na cor dos demais pixels.",
              "fullTitle": "8 - Clicar em um pixel dentro do quadro após selecionar uma cor na paleta, faz com que o pixel seja preenchido com a cor selecionada. Verifica se somente o pixel que foi clicado foi preenchido com a cor selecionada, sem influenciar na cor dos demais pixels.",
              "timedOut": null,
              "duration": 1207,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var colorToPixelIndexMap = {\n  0: 6,\n  1: 8,\n  2: 16,\n  3: 18\n};\ncy.get('.color').each(function (color, index) {\n  cy.wrap(color).click();\n  var backgroundColor = color.css('background-color');\n  var clickedPixelIndex = colorToPixelIndexMap[index];\n  cy.get('.pixel').eq(clickedPixelIndex).click();\n  cy.get('.pixel').eq(clickedPixelIndex - 1).should('not.have.css', 'background-color', backgroundColor);\n  cy.get('.pixel').eq(clickedPixelIndex + 1).should('not.have.css', 'background-color', backgroundColor);\n  cy.get('.pixel').eq(clickedPixelIndex - 5).should('not.have.css', 'background-color', backgroundColor);\n  cy.get('.pixel').eq(clickedPixelIndex + 5).should('not.have.css', 'background-color', backgroundColor);\n  cy.get('.pixel').eq(clickedPixelIndex - 6).should('not.have.css', 'background-color', backgroundColor);\n  cy.get('.pixel').eq(clickedPixelIndex - 4).should('not.have.css', 'background-color', backgroundColor);\n  cy.get('.pixel').eq(clickedPixelIndex + 4).should('not.have.css', 'background-color', backgroundColor);\n  cy.get('.pixel').eq(clickedPixelIndex + 6).should('not.have.css', 'background-color', backgroundColor);\n});",
              "err": {},
              "uuid": "1bba17fe-451a-4a99-904c-b0af9b48582c",
              "parentUUID": "2c84ee9b-1429-4170-819c-595d1659bf86",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "4962046f-9b4a-48e6-82be-fb2b15ddd57a",
            "e801c5a6-8c03-4f31-8c4f-d17b703b164f",
            "1bba17fe-451a-4a99-904c-b0af9b48582c"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 11947,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "971521a0-8bbb-4fd6-9fb6-7e48ae63f3b1",
          "title": "9 - Crie um botão que, ao ser clicado, limpa o quadro preenchendo a cor de todos seus pixels com branco.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se o botão tem o `id` denominado `clear-board`",
              "fullTitle": "9 - Crie um botão que, ao ser clicado, limpa o quadro preenchendo a cor de todos seus pixels com branco. Verifica se o botão tem o `id` denominado `clear-board`",
              "timedOut": null,
              "duration": 124,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('#clear-board').should('be.visible');",
              "err": {},
              "uuid": "734dd3b7-59e7-4fc4-ace0-a595b93b5b96",
              "parentUUID": "971521a0-8bbb-4fd6-9fb6-7e48ae63f3b1",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se o botão está posicionado entre a paleta de cores e o quadro de pixels",
              "fullTitle": "9 - Crie um botão que, ao ser clicado, limpa o quadro preenchendo a cor de todos seus pixels com branco. Verifica se o botão está posicionado entre a paleta de cores e o quadro de pixels",
              "timedOut": null,
              "duration": 76,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('#color-palette').then(function (palette) {\n  cy.get('#clear-board').should('be.belowOf', palette);\n});\ncy.get('#clear-board').then(function (clearBtn) {\n  cy.get('#pixel-board').should('be.belowOf', clearBtn);\n});",
              "err": {},
              "uuid": "0df5a56f-78f2-4b0c-aed8-c8b06267ad79",
              "parentUUID": "971521a0-8bbb-4fd6-9fb6-7e48ae63f3b1",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se o texto do botão é 'Limpar'",
              "fullTitle": "9 - Crie um botão que, ao ser clicado, limpa o quadro preenchendo a cor de todos seus pixels com branco. Verifica se o texto do botão é 'Limpar'",
              "timedOut": null,
              "duration": 58,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('#clear-board').should('contain.text', 'Limpar');",
              "err": {},
              "uuid": "f9438bf2-4244-4b9b-8609-52cedc61ca40",
              "parentUUID": "971521a0-8bbb-4fd6-9fb6-7e48ae63f3b1",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se ao clicar no botão, o quadro de pixels é totalmente preenchido de branco",
              "fullTitle": "9 - Crie um botão que, ao ser clicado, limpa o quadro preenchendo a cor de todos seus pixels com branco. Verifica se ao clicar no botão, o quadro de pixels é totalmente preenchido de branco",
              "timedOut": null,
              "duration": 6430,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').eq(1).then(function (color) {\n  var backgroundColor = color.css('background-color');\n  cy.wrap(color).click();\n  cy.get('.pixel').each(function (pixel) {\n    cy.wrap(pixel).click().should('have.css', 'background-color', backgroundColor);\n  });\n});\ncy.get('#clear-board').click();\ncy.get('.pixel').each(function (pixel) {\n  cy.wrap(pixel).should('have.css', 'background-color', WHITE);\n});",
              "err": {
                "message": "CypressError: Timed out retrying: expected '<div.pixel>' to have CSS property 'background-color' with the value 'rgb(255, 255, 255)', but the value was 'rgb(255, 0, 0)'",
                "estack": "CypressError: Timed out retrying: expected '<div.pixel>' to have CSS property 'background-color' with the value 'rgb(255, 255, 255)', but the value was 'rgb(255, 0, 0)'\n    at cypressErr (http://localhost:34283/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:34283/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:34283/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:34283/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:34283/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:34283/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:34283/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:34283/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:34283/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:34283/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:34283/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:34283/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:34283/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "921ae2f5-ed44-4cd3-83ba-0e598ae02b0f",
              "parentUUID": "971521a0-8bbb-4fd6-9fb6-7e48ae63f3b1",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "734dd3b7-59e7-4fc4-ace0-a595b93b5b96",
            "0df5a56f-78f2-4b0c-aed8-c8b06267ad79",
            "f9438bf2-4244-4b9b-8609-52cedc61ca40"
          ],
          "failures": [
            "921ae2f5-ed44-4cd3-83ba-0e598ae02b0f"
          ],
          "pending": [],
          "skipped": [],
          "duration": 6688,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "6663e657-dd95-4c6a-b9c3-62458bf7c106",
          "title": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se existe um input com o id `board-size`",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se existe um input com o id `board-size`",
              "timedOut": null,
              "duration": 147,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('#board-size').should('be.visible');",
              "err": {},
              "uuid": "c1ad64d5-fcd4-4d9a-a0da-2a8f17d6208d",
              "parentUUID": "6663e657-dd95-4c6a-b9c3-62458bf7c106",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se existe um botão com o id `generate-board`",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se existe um botão com o id `generate-board`",
              "timedOut": null,
              "duration": 120,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('#generate-board').should('be.visible');",
              "err": {},
              "uuid": "e679a130-a77b-4955-acae-d00a32186570",
              "parentUUID": "6663e657-dd95-4c6a-b9c3-62458bf7c106",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se o input só aceita número maiores que zero. Essa restrição deve ser feita usando os atributos do elemento `input`",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se o input só aceita número maiores que zero. Essa restrição deve ser feita usando os atributos do elemento `input`",
              "timedOut": null,
              "duration": 4189,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#board-size[type=\\'number\\'][min=\\'1\\']');",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#board-size[type='number'][min='1']', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#board-size[type='number'][min='1']', but never found it.\n    at cypressErr (http://localhost:34283/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:34283/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:34283/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:34283/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:34283/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:34283/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:34283/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:34283/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:34283/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:34283/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:34283/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:34283/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:34283/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "32f2b5ca-5e1f-4354-ae8e-067f2939f26b",
              "parentUUID": "6663e657-dd95-4c6a-b9c3-62458bf7c106",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se o botão contém o texto 'VQV'",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se o botão contém o texto 'VQV'",
              "timedOut": null,
              "duration": 153,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('#generate-board').contains(/vqv/i);",
              "err": {},
              "uuid": "9001d564-5e0f-464c-b7ef-0f37e7397180",
              "parentUUID": "6663e657-dd95-4c6a-b9c3-62458bf7c106",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se o input está posicionado entre a paleta de cores e o quadro de pixels",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se o input está posicionado entre a paleta de cores e o quadro de pixels",
              "timedOut": null,
              "duration": 114,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('#color-palette').then(function (palette) {\n  cy.get('#board-size').should('be.belowOf', palette);\n});\ncy.get('#board-size').then(function (palette) {\n  cy.get('#pixel-board').should('be.belowOf', palette);\n});",
              "err": {},
              "uuid": "acc036e2-bb74-4c87-93eb-eb0d951db3bb",
              "parentUUID": "6663e657-dd95-4c6a-b9c3-62458bf7c106",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se o botão está posicionado ao lado do input",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se o botão está posicionado ao lado do input",
              "timedOut": null,
              "duration": 68,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('#board-size').then(function (board) {\n  cy.get('#generate-board').should('be.onTheRightOf', board);\n});",
              "err": {},
              "uuid": "e8e90185-6586-48e4-89c2-5adddeda83b5",
              "parentUUID": "6663e657-dd95-4c6a-b9c3-62458bf7c106",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se nenhum valor for colocado no input ao clicar no botão, um `alert` é exibido com o texto: 'Board inválido!'",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se nenhum valor for colocado no input ao clicar no botão, um `alert` é exibido com o texto: 'Board inválido!'",
              "timedOut": null,
              "duration": 268,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "var alerted = false;\ncy.on('window:alert', function (msg) {\n  return alerted = msg;\n});\ncy.get('#generate-board').click().then(function () {\n  return expect(alerted).to.match(/Board inválido!/i);\n});",
              "err": {
                "message": "AssertionError: expected false to match /Board inválido!/i",
                "estack": "AssertionError: expected false to match /Board inválido!/i\n    at getRet (http://localhost:34283/__cypress/runner/cypress_runner.js:136585:16)\n    at tryCatcher (http://localhost:34283/__cypress/runner/cypress_runner.js:167415:23)\n    at Function.Promise.attempt.Promise.try (http://localhost:34283/__cypress/runner/cypress_runner.js:164690:29)\n    at Context.thenFn (http://localhost:34283/__cypress/runner/cypress_runner.js:136599:23)\n    at Context.then (http://localhost:34283/__cypress/runner/cypress_runner.js:136971:21)\n    at Context.<anonymous> (http://localhost:34283/__cypress/runner/cypress_runner.js:148875:21)\n    at http://localhost:34283/__cypress/runner/cypress_runner.js:148351:33\n    at tryCatcher (http://localhost:34283/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:34283/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:34283/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromiseCtx (http://localhost:34283/__cypress/runner/cypress_runner.js:165445:10)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:34283/__cypress/runner/cypress_runner.js:162145:12)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:34283/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:34283/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "d917d66f-52a2-4185-8434-9020f6d89198",
              "parentUUID": "6663e657-dd95-4c6a-b9c3-62458bf7c106",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se ao clicar no botão com um valor preenchido, o tamanho do board muda.",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se ao clicar no botão com um valor preenchido, o tamanho do board muda.",
              "timedOut": null,
              "duration": 4578,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#board-size').clear().type(10);\ncy.get('#generate-board').click();\ncy.get('.pixel').should('have.length', 100);",
              "err": {
                "message": "CypressError: Timed out retrying: Not enough elements found. Found '25', expected '100'.",
                "estack": "CypressError: Timed out retrying: Not enough elements found. Found '25', expected '100'.\n    at cypressErr (http://localhost:34283/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:34283/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:34283/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:34283/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:34283/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:34283/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:34283/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:34283/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:34283/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:34283/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:34283/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:34283/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:34283/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "d2c16eb3-ab3c-4e3c-b5e6-179c4eed1bc3",
              "parentUUID": "6663e657-dd95-4c6a-b9c3-62458bf7c106",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se o novo quadro tem todos os pixels preenchidos com a cor branca",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se o novo quadro tem todos os pixels preenchidos com a cor branca",
              "timedOut": null,
              "duration": 4575,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#board-size').clear().type(6);\ncy.get('#generate-board').click();\ncy.get('.pixel').should('have.length', 36).each(function (pixel) {\n  expect(pixel).to.have.css('background-color', WHITE);\n});",
              "err": {
                "message": "CypressError: Timed out retrying: Not enough elements found. Found '25', expected '36'.",
                "estack": "CypressError: Timed out retrying: Not enough elements found. Found '25', expected '36'.\n    at cypressErr (http://localhost:34283/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:34283/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:34283/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:34283/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:34283/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:34283/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:34283/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:34283/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:34283/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:34283/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:34283/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:34283/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:34283/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "822a6951-c7f1-4120-8996-d3ea3be32a52",
              "parentUUID": "6663e657-dd95-4c6a-b9c3-62458bf7c106",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "c1ad64d5-fcd4-4d9a-a0da-2a8f17d6208d",
            "e679a130-a77b-4955-acae-d00a32186570",
            "9001d564-5e0f-464c-b7ef-0f37e7397180",
            "acc036e2-bb74-4c87-93eb-eb0d951db3bb",
            "e8e90185-6586-48e4-89c2-5adddeda83b5"
          ],
          "failures": [
            "32f2b5ca-5e1f-4354-ae8e-067f2939f26b",
            "d917d66f-52a2-4185-8434-9020f6d89198",
            "d2c16eb3-ab3c-4e3c-b5e6-179c4eed1bc3",
            "822a6951-c7f1-4120-8996-d3ea3be32a52"
          ],
          "pending": [],
          "skipped": [],
          "duration": 14212,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "e79d9faa-67e8-4fab-bcfa-0012dd2f0946",
          "title": "11 - Limite o tamanho mínimo e máximo do board.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se a altura máxima do board é 50",
              "fullTitle": "11 - Limite o tamanho mínimo e máximo do board. Verifica se a altura máxima do board é 50",
              "timedOut": null,
              "duration": 4623,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#board-size').clear().type(50);\ncy.get('#generate-board').click();\ncy.get('.pixel').should('have.length', 2500);",
              "err": {
                "message": "CypressError: Timed out retrying: Not enough elements found. Found '25', expected '2500'.",
                "estack": "CypressError: Timed out retrying: Not enough elements found. Found '25', expected '2500'.\n    at cypressErr (http://localhost:34283/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:34283/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:34283/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:34283/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:34283/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:34283/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:34283/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:34283/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:34283/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:34283/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:34283/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:34283/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:34283/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "71a134d4-7917-4f1f-ac84-b33be73ec36d",
              "parentUUID": "e79d9faa-67e8-4fab-bcfa-0012dd2f0946",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se a altura do board é 5 quando um valor menor é colocado no input",
              "fullTitle": "11 - Limite o tamanho mínimo e máximo do board. Verifica se a altura do board é 5 quando um valor menor é colocado no input",
              "timedOut": null,
              "duration": 449,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('#board-size').clear().type(4);\ncy.get('#generate-board').click();\ncy.get('.pixel').should('have.length', 25);",
              "err": {},
              "uuid": "0d5f5ea6-4b60-420b-9cb0-7974b5cb104b",
              "parentUUID": "e79d9faa-67e8-4fab-bcfa-0012dd2f0946",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se a altura do board é 50 quando um valor maior é colocado no input",
              "fullTitle": "11 - Limite o tamanho mínimo e máximo do board. Verifica se a altura do board é 50 quando um valor maior é colocado no input",
              "timedOut": null,
              "duration": 4552,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#board-size').clear().type(51);\ncy.get('#generate-board').click();\ncy.get('.pixel').should('have.length', 2500);",
              "err": {
                "message": "CypressError: Timed out retrying: Not enough elements found. Found '25', expected '2500'.",
                "estack": "CypressError: Timed out retrying: Not enough elements found. Found '25', expected '2500'.\n    at cypressErr (http://localhost:34283/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:34283/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:34283/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:34283/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:34283/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:34283/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:34283/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:34283/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:34283/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:34283/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:34283/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:34283/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:34283/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "812085b0-7375-47e9-a428-028cfde07e3d",
              "parentUUID": "e79d9faa-67e8-4fab-bcfa-0012dd2f0946",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "0d5f5ea6-4b60-420b-9cb0-7974b5cb104b"
          ],
          "failures": [
            "71a134d4-7917-4f1f-ac84-b33be73ec36d",
            "812085b0-7375-47e9-a428-028cfde07e3d"
          ],
          "pending": [],
          "skipped": [],
          "duration": 9624,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "833e5e05-d3fc-4bab-9826-1c958f5fc7f6",
          "title": "12 - Faça com que as cores da paleta sejam geradas aleatoriamente ao carregar a página.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se as cores geradas na paleta são diferentes a cada carregamento da página",
              "fullTitle": "12 - Faça com que as cores da paleta sejam geradas aleatoriamente ao carregar a página. Verifica se as cores geradas na paleta são diferentes a cada carregamento da página",
              "timedOut": null,
              "duration": 376,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').then(function (colors) {\n  var currentColors;\n  var previousColors;\n  previousColors = Array.from(colors).map(function (color) {\n    return Cypress.$(color).css('background-color');\n  });\n  for (var i = 0; i < 5; i += 1) {\n    cy.reload();\n    cy.get('.color').then(function (colors) {\n      currentColors = Array.from(colors).map(function (color) {\n        return Cypress.$(color).css('background-color');\n      });\n      expect(currentColors).not.to.deep.equal(previousColors);\n      previousColors = currentColors;\n    });\n  }\n});",
              "err": {
                "message": "AssertionError: expected [ Array(4) ] to not deeply equal [ Array(4) ]",
                "estack": "AssertionError: expected [ Array(4) ] to not deeply equal [ Array(4) ]\n    at getRet (http://localhost:34283/__cypress/runner/cypress_runner.js:136585:16)\n    at tryCatcher (http://localhost:34283/__cypress/runner/cypress_runner.js:167415:23)\n    at Function.Promise.attempt.Promise.try (http://localhost:34283/__cypress/runner/cypress_runner.js:164690:29)\n    at Context.thenFn (http://localhost:34283/__cypress/runner/cypress_runner.js:136599:23)\n    at Context.then (http://localhost:34283/__cypress/runner/cypress_runner.js:136971:21)\n    at Context.<anonymous> (http://localhost:34283/__cypress/runner/cypress_runner.js:148875:21)\n    at http://localhost:34283/__cypress/runner/cypress_runner.js:148351:33\n    at tryCatcher (http://localhost:34283/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:34283/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:34283/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromiseCtx (http://localhost:34283/__cypress/runner/cypress_runner.js:165445:10)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:34283/__cypress/runner/cypress_runner.js:162145:12)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:34283/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:34283/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": ""
              },
              "uuid": "b9b6a00b-720a-47e4-be61-11ba20feb148",
              "parentUUID": "833e5e05-d3fc-4bab-9826-1c958f5fc7f6",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se a cor preta ainda está presente e é a primeira na sua paleta de cores",
              "fullTitle": "12 - Faça com que as cores da paleta sejam geradas aleatoriamente ao carregar a página. Verifica se a cor preta ainda está presente e é a primeira na sua paleta de cores",
              "timedOut": null,
              "duration": 453,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').then(function (colors) {\n  var currentColors;\n  var previousColors;\n  previousColors = Array.from(colors).map(function (color) {\n    return Cypress.$(color).css('background-color');\n  });\n  expect(previousColors[0]).to.eq(BLACK);\n  for (var i = 0; i < 5; i += 1) {\n    cy.reload();\n    cy.get('.color').then(function (colors) {\n      currentColors = Array.from(colors).map(function (color) {\n        return Cypress.$(color).css('background-color');\n      });\n      expect(currentColors[0]).to.eq(BLACK);\n      expect(currentColors).not.to.deep.equal(previousColors);\n      previousColors = currentColors;\n    });\n  }\n});",
              "err": {
                "message": "AssertionError: expected [ Array(4) ] to not deeply equal [ Array(4) ]",
                "estack": "AssertionError: expected [ Array(4) ] to not deeply equal [ Array(4) ]\n    at getRet (http://localhost:34283/__cypress/runner/cypress_runner.js:136585:16)\n    at tryCatcher (http://localhost:34283/__cypress/runner/cypress_runner.js:167415:23)\n    at Function.Promise.attempt.Promise.try (http://localhost:34283/__cypress/runner/cypress_runner.js:164690:29)\n    at Context.thenFn (http://localhost:34283/__cypress/runner/cypress_runner.js:136599:23)\n    at Context.then (http://localhost:34283/__cypress/runner/cypress_runner.js:136971:21)\n    at Context.<anonymous> (http://localhost:34283/__cypress/runner/cypress_runner.js:148875:21)\n    at http://localhost:34283/__cypress/runner/cypress_runner.js:148351:33\n    at tryCatcher (http://localhost:34283/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:34283/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:34283/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromiseCtx (http://localhost:34283/__cypress/runner/cypress_runner.js:165445:10)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:34283/__cypress/runner/cypress_runner.js:162145:12)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:34283/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:34283/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": ""
              },
              "uuid": "288d617d-0d9a-4a88-ba57-49303bbedc45",
              "parentUUID": "833e5e05-d3fc-4bab-9826-1c958f5fc7f6",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [],
          "failures": [
            "b9b6a00b-720a-47e4-be61-11ba20feb148",
            "288d617d-0d9a-4a88-ba57-49303bbedc45"
          ],
          "pending": [],
          "skipped": [],
          "duration": 829,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    }
  ],
  "meta": {
    "mocha": {
      "version": "7.0.1"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": false,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false
      },
      "version": "4.1.0"
    },
    "marge": {
      "options": {
        "id": "default",
        "reportDir": "cypress/reports",
        "overwrite": true,
        "html": false,
        "json": true
      },
      "version": "4.1.0"
    }
  }
}