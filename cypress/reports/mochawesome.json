{
  "stats": {
    "suites": 12,
    "tests": 41,
    "passes": 29,
    "pending": 0,
    "failures": 12,
    "start": "2021-07-29T12:42:25.642Z",
    "end": "2021-07-29T12:43:16.693Z",
    "duration": 51051,
    "testsRegistered": 41,
    "passPercent": 70.73170731707317,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "6cce851f-22f4-442a-b010-4d6b0070bcd1",
      "title": "",
      "fullFile": "cypress/integration/project.spec.js",
      "file": "cypress/integration/project.spec.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "ad5409c7-a59e-4b51-9390-269c44333a4b",
          "title": "1 - Adicione à página o título \"Paleta de Cores\".",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se contém um elemento `h1` com o id `title` com o título correto",
              "fullTitle": "1 - Adicione à página o título \"Paleta de Cores\". Verifica se contém um elemento `h1` com o id `title` com o título correto",
              "timedOut": null,
              "duration": 138,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('h1#title').should('contain.text', 'Paleta de Cores');",
              "err": {},
              "uuid": "683df568-42b9-4e7e-828d-e5ce95670b8e",
              "parentUUID": "ad5409c7-a59e-4b51-9390-269c44333a4b",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "683df568-42b9-4e7e-828d-e5ce95670b8e"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 138,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "0874d9a7-1d5c-47f1-a9f0-f8477c517dda",
          "title": "2 - Adicione à página uma paleta de quatro cores distintas.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "A paleta de cores deve ser um elemento com `id` denominado `color-palette`",
              "fullTitle": "2 - Adicione à página uma paleta de quatro cores distintas. A paleta de cores deve ser um elemento com `id` denominado `color-palette`",
              "timedOut": null,
              "duration": 126,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('#color-palette').should('be.visible');",
              "err": {},
              "uuid": "9fd6ecc7-cf79-4a79-a0dc-8c3c3a408860",
              "parentUUID": "0874d9a7-1d5c-47f1-a9f0-f8477c517dda",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se cada cor individual da paleta de cores possui a `classe` chamada `color`.",
              "fullTitle": "2 - Adicione à página uma paleta de quatro cores distintas. Verifica se cada cor individual da paleta de cores possui a `classe` chamada `color`.",
              "timedOut": null,
              "duration": 104,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').should('have.length', 4).then(function (colors) {\n  for (var i = 0; i < colors.length; i++) {\n    cy.wrap(colors[i]).should('be.visible');\n  }\n});",
              "err": {},
              "uuid": "b005b2fc-44d5-47b5-860a-1a222dbdb0a9",
              "parentUUID": "0874d9a7-1d5c-47f1-a9f0-f8477c517dda",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se a cor de fundo de cada elemento da paleta é a cor que o elemento representa. **A única cor não permitida na paleta é a cor branca.**",
              "fullTitle": "2 - Adicione à página uma paleta de quatro cores distintas. Verifica se a cor de fundo de cada elemento da paleta é a cor que o elemento representa. **A única cor não permitida na paleta é a cor branca.**",
              "timedOut": null,
              "duration": 115,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').each(function (color) {\n  cy.wrap(color).should('have.class', 'color').and('not.have.css', 'background-color', WHITE);\n  cy.wrap(color).should('have.css', 'background-color');\n});",
              "err": {},
              "uuid": "79330665-9c38-4cb9-a89a-b3fb137a6f44",
              "parentUUID": "0874d9a7-1d5c-47f1-a9f0-f8477c517dda",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se cada elemento da paleta de cores tem uma borda preta, sólida e com 1 pixel de largura;",
              "fullTitle": "2 - Adicione à página uma paleta de quatro cores distintas. Verifica se cada elemento da paleta de cores tem uma borda preta, sólida e com 1 pixel de largura;",
              "timedOut": null,
              "duration": 98,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').each(function (color) {\n  cy.wrap(color).and('have.css', 'border', \"1px solid \".concat(BLACK)).and('have.class', 'color');\n});",
              "err": {},
              "uuid": "e4b07c43-b8ed-4c48-9b36-d9335a60aeee",
              "parentUUID": "0874d9a7-1d5c-47f1-a9f0-f8477c517dda",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se a paleta lista todas as cores disponíveis para utilização, lado a lado.",
              "fullTitle": "2 - Adicione à página uma paleta de quatro cores distintas. Verifica se a paleta lista todas as cores disponíveis para utilização, lado a lado.",
              "timedOut": null,
              "duration": 96,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').then(function (colors) {\n  for (var index = 1; index < colors.length; index += 1) {\n    var currentColor = colors[index];\n    var previousColor = colors[index - 1];\n    cy.wrap(currentColor).should('be.onTheRightOf', previousColor).and('be.horizontallyAlignedWith', previousColor);\n  }\n});",
              "err": {},
              "uuid": "acbe812c-e991-4ee1-a11a-87166ba07f87",
              "parentUUID": "0874d9a7-1d5c-47f1-a9f0-f8477c517dda",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se a paleta de cores está posicionada abaixo do título 'Paleta de Cores'",
              "fullTitle": "2 - Adicione à página uma paleta de quatro cores distintas. Verifica se a paleta de cores está posicionada abaixo do título 'Paleta de Cores'",
              "timedOut": null,
              "duration": 151,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('h1#title').then(function (title) {\n  cy.get('#color-palette').should('be.belowOf', title);\n});",
              "err": {},
              "uuid": "72c151e1-432b-49c4-9e70-91885aada56d",
              "parentUUID": "0874d9a7-1d5c-47f1-a9f0-f8477c517dda",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se a paleta de cores não contém cores repetidas.",
              "fullTitle": "2 - Adicione à página uma paleta de quatro cores distintas. Verifica se a paleta de cores não contém cores repetidas.",
              "timedOut": null,
              "duration": 87,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').then(function (colors) {\n  var allColors = Array.from(colors).map(function (color) {\n    return Cypress.$(color).css('background-color');\n  });\n  cy.log(allColors);\n  var uniqColors = (0, _toConsumableArray2[\"default\"])(new Set(allColors));\n  cy.log(uniqColors);\n  expect(allColors.length).to.eq(uniqColors.length);\n});",
              "err": {},
              "uuid": "668ec70c-7b78-4b23-8522-6c426a6f3f12",
              "parentUUID": "0874d9a7-1d5c-47f1-a9f0-f8477c517dda",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "9fd6ecc7-cf79-4a79-a0dc-8c3c3a408860",
            "b005b2fc-44d5-47b5-860a-1a222dbdb0a9",
            "79330665-9c38-4cb9-a89a-b3fb137a6f44",
            "e4b07c43-b8ed-4c48-9b36-d9335a60aeee",
            "acbe812c-e991-4ee1-a11a-87166ba07f87",
            "72c151e1-432b-49c4-9e70-91885aada56d",
            "668ec70c-7b78-4b23-8522-6c426a6f3f12"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 777,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "a3224d6c-cbd6-48cc-a61b-3fcf065bb548",
          "title": "3 - Adicione a cor **preta** como a primeira cor da paleta de cores.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se a primeira cor da paleta é preta",
              "fullTitle": "3 - Adicione a cor **preta** como a primeira cor da paleta de cores. Verifica se a primeira cor da paleta é preta",
              "timedOut": null,
              "duration": 97,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').first().should('have.css', 'background-color', BLACK);",
              "err": {},
              "uuid": "ae1d1921-16f4-4c41-afb1-5b1da541e734",
              "parentUUID": "a3224d6c-cbd6-48cc-a61b-3fcf065bb548",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se as demais cores podem ser escolhidas livremente.",
              "fullTitle": "3 - Adicione a cor **preta** como a primeira cor da paleta de cores. Verifica se as demais cores podem ser escolhidas livremente.",
              "timedOut": null,
              "duration": 146,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').eq(1).should('not.have.css', 'background-color', BLACK);\ncy.get('.color').eq(1).should('not.have.css', 'background-color', WHITE);\ncy.get('.color').eq(1).should('not.have.css', 'background-color', 'rgba(0, 0, 0, 0)');\ncy.get('.color').eq(1).should('have.css', 'background-color');\ncy.get('.color').eq(2).should('not.have.css', 'background-color', BLACK);\ncy.get('.color').eq(2).should('not.have.css', 'background-color', WHITE);\ncy.get('.color').eq(2).should('not.have.css', 'background-color', 'rgba(0, 0, 0, 0)');\ncy.get('.color').eq(2).should('have.css', 'background-color');\ncy.get('.color').eq(3).should('not.have.css', 'background-color', BLACK);\ncy.get('.color').eq(3).should('not.have.css', 'background-color', WHITE);\ncy.get('.color').eq(3).should('not.have.css', 'background-color', 'rgba(0, 0, 0, 0)');\ncy.get('.color').eq(3).should('have.css', 'background-color');",
              "err": {},
              "uuid": "2c8dcd3f-b98b-4ee6-8fd1-298e9c53805a",
              "parentUUID": "a3224d6c-cbd6-48cc-a61b-3fcf065bb548",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "ae1d1921-16f4-4c41-afb1-5b1da541e734",
            "2c8dcd3f-b98b-4ee6-8fd1-298e9c53805a"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 243,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "3118f614-d399-429d-b67f-4f9a3bf1af46",
          "title": "4 - Adicione à página um quadro de pixels, com 25 pixels.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se o quadro de pixels possui o `id` denominado `pixel-board`",
              "fullTitle": "4 - Adicione à página um quadro de pixels, com 25 pixels. Verifica se o quadro de pixels possui o `id` denominado `pixel-board`",
              "timedOut": null,
              "duration": 71,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('#pixel-board').should('be.visible');",
              "err": {},
              "uuid": "2185d423-1e61-4fd5-b3fc-09618b966f4d",
              "parentUUID": "3118f614-d399-429d-b67f-4f9a3bf1af46",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se cada pixel individual dentro do quadro possui a `classe` denominada `pixel`.",
              "fullTitle": "4 - Adicione à página um quadro de pixels, com 25 pixels. Verifica se cada pixel individual dentro do quadro possui a `classe` denominada `pixel`.",
              "timedOut": null,
              "duration": 147,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.pixel').should('have.length', 25);",
              "err": {},
              "uuid": "e3a50081-d989-461d-8f97-bc2cc84715fd",
              "parentUUID": "3118f614-d399-429d-b67f-4f9a3bf1af46",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se a cor inicial dos pixels dentro do quadro, ao abrir a página, é branca.",
              "fullTitle": "4 - Adicione à página um quadro de pixels, com 25 pixels. Verifica se a cor inicial dos pixels dentro do quadro, ao abrir a página, é branca.",
              "timedOut": null,
              "duration": 124,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.pixel').should('have.length', 25).each(function (pixel) {\n  expect(pixel).to.have.css('background-color', WHITE);\n});",
              "err": {},
              "uuid": "8b3b21c4-3e5f-49b9-b6db-957958345ce8",
              "parentUUID": "3118f614-d399-429d-b67f-4f9a3bf1af46",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se o quadro de pixels aparece abaixo da paleta de cores",
              "fullTitle": "4 - Adicione à página um quadro de pixels, com 25 pixels. Verifica se o quadro de pixels aparece abaixo da paleta de cores",
              "timedOut": null,
              "duration": 71,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('#color-palette').then(function (palette) {\n  cy.get('#pixel-board').should('be.belowOf', palette);\n});",
              "err": {},
              "uuid": "1e7027b3-52b8-4dcf-8e57-1e07f68957f8",
              "parentUUID": "3118f614-d399-429d-b67f-4f9a3bf1af46",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "2185d423-1e61-4fd5-b3fc-09618b966f4d",
            "e3a50081-d989-461d-8f97-bc2cc84715fd",
            "8b3b21c4-3e5f-49b9-b6db-957958345ce8",
            "1e7027b3-52b8-4dcf-8e57-1e07f68957f8"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 413,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "f4793b19-8797-4aa1-b177-001a3768ed37",
          "title": "5 - Faça com que cada elemento do quadro de pixels possua 40 pixels de largura, 40 pixels de altura e seja delimitado por uma borda preta de 1 pixel.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se o quadro de pixels tem altura e comprimento de 5 elementos",
              "fullTitle": "5 - Faça com que cada elemento do quadro de pixels possua 40 pixels de largura, 40 pixels de altura e seja delimitado por uma borda preta de 1 pixel. Verifica se o quadro de pixels tem altura e comprimento de 5 elementos",
              "timedOut": null,
              "duration": 354,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('.pixel').should('have.length', 25).each(function (pixel) {\n  expect(pixel).to.have.css('background-color', WHITE);\n}).and(function (pixels) {\n  var rows = chunk(pixels, 5);\n  rows.forEach(function (row) {\n    for (var index = 1; index < row.length; index += 1) {\n      var current = pixels[index];\n      var previous = pixels[index - 1];\n      cy.wrap(current).should('be.onTheRightOf', previous).and('be.horizontallyAlignedWith', previous);\n    }\n  });\n  for (var index = 1; index < 5; index += 1) {\n    expect(pixels[index * 5]).to.be.belowOf(pixels[(index - 1) * 5]);\n  }\n});",
              "err": {
                "message": "AssertionError: expected '<div.pixel>' to be below of <div class=\"pixel\" style=\"background-color: white;\"></div>",
                "estack": "AssertionError: expected '<div.pixel>' to be below of <div class=\"pixel\" style=\"background-color: white;\"></div>\n    at http://localhost:39095/__cypress/runner/cypress_runner.js:136161:17\n    at tryCatcher (http://localhost:39095/__cypress/runner/cypress_runner.js:167415:23)\n    at Function.Promise.attempt.Promise.try (http://localhost:39095/__cypress/runner/cypress_runner.js:164690:29)\n    at Context.shouldFnWithCallback (http://localhost:39095/__cypress/runner/cypress_runner.js:136158:23)\n    at Context.shouldFn (http://localhost:39095/__cypress/runner/cypress_runner.js:136167:35)\n    at Context.and (http://localhost:39095/__cypress/runner/cypress_runner.js:136265:23)\n    at Context.<anonymous> (http://localhost:39095/__cypress/runner/cypress_runner.js:148875:21)\n    at http://localhost:39095/__cypress/runner/cypress_runner.js:148351:33\n    at tryCatcher (http://localhost:39095/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:39095/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:39095/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromiseCtx (http://localhost:39095/__cypress/runner/cypress_runner.js:165445:10)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:39095/__cypress/runner/cypress_runner.js:162145:12)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:39095/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:39095/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": ""
              },
              "uuid": "bbebfe70-0431-46f4-a569-786e23b64e4f",
              "parentUUID": "f4793b19-8797-4aa1-b177-001a3768ed37",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se 40 pixels é o tamanho total do elemento, incluindo seu conteúdo e excluindo a borda preta, que deve ser criada à parte.",
              "fullTitle": "5 - Faça com que cada elemento do quadro de pixels possua 40 pixels de largura, 40 pixels de altura e seja delimitado por uma borda preta de 1 pixel. Verifica se 40 pixels é o tamanho total do elemento, incluindo seu conteúdo e excluindo a borda preta, que deve ser criada à parte.",
              "timedOut": null,
              "duration": 268,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.pixel').each(function (pixel) {\n  cy.wrap(pixel).should('have.css', 'height', '40px').and('have.css', 'width', '40px').and('have.css', 'border', \"1px solid \".concat(BLACK));\n});",
              "err": {},
              "uuid": "e4c24dd7-4e4c-46f2-a8d2-d8d783f5c6c4",
              "parentUUID": "f4793b19-8797-4aa1-b177-001a3768ed37",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "e4c24dd7-4e4c-46f2-a8d2-d8d783f5c6c4"
          ],
          "failures": [
            "bbebfe70-0431-46f4-a569-786e23b64e4f"
          ],
          "pending": [],
          "skipped": [],
          "duration": 622,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "8ce16f67-58d2-4d7e-a288-42ca01432d44",
          "title": "6 - Defina a cor preta como cor inicial. Ao carregar a página a cor preta já deve estar selecionada para pintar os pixels",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se o elemento da cor preta possui, inicialmente, a `classe` `selected`",
              "fullTitle": "6 - Defina a cor preta como cor inicial. Ao carregar a página a cor preta já deve estar selecionada para pintar os pixels Verifica se o elemento da cor preta possui, inicialmente, a `classe` `selected`",
              "timedOut": null,
              "duration": 68,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.selected').first().should('have.css', 'background-color', BLACK);",
              "err": {},
              "uuid": "5102761e-4752-4a85-9a96-66346bf2b680",
              "parentUUID": "8ce16f67-58d2-4d7e-a288-42ca01432d44",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se nenhuma outra cor da paleta tem a `classe` `selected`",
              "fullTitle": "6 - Defina a cor preta como cor inicial. Ao carregar a página a cor preta já deve estar selecionada para pintar os pixels Verifica se nenhuma outra cor da paleta tem a `classe` `selected`",
              "timedOut": null,
              "duration": 64,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color:not(:first-child)').each(function (color) {\n  cy.wrap(color).should('not.have.class', 'selected');\n});",
              "err": {},
              "uuid": "64b566a1-dcfc-494f-94f4-dca717c6fa8d",
              "parentUUID": "8ce16f67-58d2-4d7e-a288-42ca01432d44",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "5102761e-4752-4a85-9a96-66346bf2b680",
            "64b566a1-dcfc-494f-94f4-dca717c6fa8d"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 132,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "e54229f1-d296-4cd1-8bf6-29ba394ea7e7",
          "title": "7 - Clicar em uma das cores da paleta, faz com que ela seja selecionada e utilizada para preencher os pixels no quadro.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se somente uma cor da paleta de cores tem a classe `selected` de cada vez",
              "fullTitle": "7 - Clicar em uma das cores da paleta, faz com que ela seja selecionada e utilizada para preencher os pixels no quadro. Verifica se somente uma cor da paleta de cores tem a classe `selected` de cada vez",
              "timedOut": null,
              "duration": 440,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').each(function (selectedColor, selectedColorIndex) {\n  cy.wrap(selectedColor).click();\n  cy.get('.color').each(function (color, colorIndex) {\n    if (colorIndex === selectedColorIndex) {\n      expect(color).to.have[\"class\"]('selected');\n    } else {\n      expect(color).not.to.have[\"class\"]('selected');\n    }\n  });\n});",
              "err": {},
              "uuid": "67a9e268-fd86-4db8-9fd5-36fbec9af483",
              "parentUUID": "e54229f1-d296-4cd1-8bf6-29ba394ea7e7",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se os pixels dentro do quadro não têm a classe `selected` quando são clicados",
              "fullTitle": "7 - Clicar em uma das cores da paleta, faz com que ela seja selecionada e utilizada para preencher os pixels no quadro. Verifica se os pixels dentro do quadro não têm a classe `selected` quando são clicados",
              "timedOut": null,
              "duration": 8656,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').each(function (color) {\n  var backgroundColor = color.css('background-color');\n  cy.wrap(color).click();\n  cy.get('.pixel').each(function (pixel) {\n    cy.wrap(pixel).click().should('not.have.class', 'selected');\n  });\n});",
              "err": {},
              "uuid": "ac47e704-78e1-4716-8b09-d22d07e62909",
              "parentUUID": "e54229f1-d296-4cd1-8bf6-29ba394ea7e7",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "67a9e268-fd86-4db8-9fd5-36fbec9af483",
            "ac47e704-78e1-4716-8b09-d22d07e62909"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 9096,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "ec6fcdfb-c595-4ae9-a560-1ad442ec2aee",
          "title": "8 - Clicar em um pixel dentro do quadro após selecionar uma cor na paleta, faz com que o pixel seja preenchido com a cor selecionada.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se ao carregar a página deve ser possível pintar os pixels de preto",
              "fullTitle": "8 - Clicar em um pixel dentro do quadro após selecionar uma cor na paleta, faz com que o pixel seja preenchido com a cor selecionada. Verifica se ao carregar a página deve ser possível pintar os pixels de preto",
              "timedOut": null,
              "duration": 4289,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('.pixel').each(function (pixel) {\n  cy.wrap(pixel).click().should('have.css', 'background-color', BLACK);\n});",
              "err": {
                "message": "CypressError: Timed out retrying: expected '<div.pixel>' to have CSS property 'background-color' with the value 'rgb(0, 0, 0)', but the value was 'rgb(255, 255, 255)'",
                "estack": "CypressError: Timed out retrying: expected '<div.pixel>' to have CSS property 'background-color' with the value 'rgb(0, 0, 0)', but the value was 'rgb(255, 255, 255)'\n    at cypressErr (http://localhost:39095/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:39095/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:39095/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:39095/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:39095/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:39095/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:39095/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:39095/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:39095/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:39095/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:39095/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:39095/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:39095/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "2007d6d2-d7f2-4939-ab36-c24f5a20f889",
              "parentUUID": "ec6fcdfb-c595-4ae9-a560-1ad442ec2aee",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se após selecionar uma outra cor na paleta, é possível pintar os pixels com essa cor",
              "fullTitle": "8 - Clicar em um pixel dentro do quadro após selecionar uma cor na paleta, faz com que o pixel seja preenchido com a cor selecionada. Verifica se após selecionar uma outra cor na paleta, é possível pintar os pixels com essa cor",
              "timedOut": null,
              "duration": 4353,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').each(function (color) {\n  var backgroundColor = color.css('background-color');\n  cy.wrap(color).click();\n  cy.get('.pixel').each(function (pixel) {\n    cy.wrap(pixel).click().should('have.css', 'background-color', backgroundColor);\n  });\n});",
              "err": {
                "message": "CypressError: Timed out retrying: expected '<div.pixel>' to have CSS property 'background-color' with the value 'rgb(0, 0, 0)', but the value was 'rgb(255, 255, 255)'",
                "estack": "CypressError: Timed out retrying: expected '<div.pixel>' to have CSS property 'background-color' with the value 'rgb(0, 0, 0)', but the value was 'rgb(255, 255, 255)'\n    at cypressErr (http://localhost:39095/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:39095/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:39095/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:39095/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:39095/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:39095/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:39095/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:39095/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:39095/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:39095/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:39095/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:39095/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:39095/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "f7d318a2-dcde-4f91-b12e-6ee875e0dbcf",
              "parentUUID": "ec6fcdfb-c595-4ae9-a560-1ad442ec2aee",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se somente o pixel que foi clicado foi preenchido com a cor selecionada, sem influenciar na cor dos demais pixels.",
              "fullTitle": "8 - Clicar em um pixel dentro do quadro após selecionar uma cor na paleta, faz com que o pixel seja preenchido com a cor selecionada. Verifica se somente o pixel que foi clicado foi preenchido com a cor selecionada, sem influenciar na cor dos demais pixels.",
              "timedOut": null,
              "duration": 1164,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var colorToPixelIndexMap = {\n  0: 6,\n  1: 8,\n  2: 16,\n  3: 18\n};\ncy.get('.color').each(function (color, index) {\n  cy.wrap(color).click();\n  var backgroundColor = color.css('background-color');\n  var clickedPixelIndex = colorToPixelIndexMap[index];\n  cy.get('.pixel').eq(clickedPixelIndex).click();\n  cy.get('.pixel').eq(clickedPixelIndex - 1).should('not.have.css', 'background-color', backgroundColor);\n  cy.get('.pixel').eq(clickedPixelIndex + 1).should('not.have.css', 'background-color', backgroundColor);\n  cy.get('.pixel').eq(clickedPixelIndex - 5).should('not.have.css', 'background-color', backgroundColor);\n  cy.get('.pixel').eq(clickedPixelIndex + 5).should('not.have.css', 'background-color', backgroundColor);\n  cy.get('.pixel').eq(clickedPixelIndex - 6).should('not.have.css', 'background-color', backgroundColor);\n  cy.get('.pixel').eq(clickedPixelIndex - 4).should('not.have.css', 'background-color', backgroundColor);\n  cy.get('.pixel').eq(clickedPixelIndex + 4).should('not.have.css', 'background-color', backgroundColor);\n  cy.get('.pixel').eq(clickedPixelIndex + 6).should('not.have.css', 'background-color', backgroundColor);\n});",
              "err": {},
              "uuid": "c0b35dfd-27c8-41a4-a461-d65648751cde",
              "parentUUID": "ec6fcdfb-c595-4ae9-a560-1ad442ec2aee",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "c0b35dfd-27c8-41a4-a461-d65648751cde"
          ],
          "failures": [
            "2007d6d2-d7f2-4939-ab36-c24f5a20f889",
            "f7d318a2-dcde-4f91-b12e-6ee875e0dbcf"
          ],
          "pending": [],
          "skipped": [],
          "duration": 9806,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "c8bece74-873f-4f25-8de8-fbfea308ae02",
          "title": "9 - Crie um botão que, ao ser clicado, limpa o quadro preenchendo a cor de todos seus pixels com branco.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se o botão tem o `id` denominado `clear-board`",
              "fullTitle": "9 - Crie um botão que, ao ser clicado, limpa o quadro preenchendo a cor de todos seus pixels com branco. Verifica se o botão tem o `id` denominado `clear-board`",
              "timedOut": null,
              "duration": 102,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('#clear-board').should('be.visible');",
              "err": {},
              "uuid": "6093259a-9dfa-47fc-8c4b-fd79fcc88478",
              "parentUUID": "c8bece74-873f-4f25-8de8-fbfea308ae02",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se o botão está posicionado entre a paleta de cores e o quadro de pixels",
              "fullTitle": "9 - Crie um botão que, ao ser clicado, limpa o quadro preenchendo a cor de todos seus pixels com branco. Verifica se o botão está posicionado entre a paleta de cores e o quadro de pixels",
              "timedOut": null,
              "duration": 78,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('#color-palette').then(function (palette) {\n  cy.get('#clear-board').should('be.belowOf', palette);\n});\ncy.get('#clear-board').then(function (clearBtn) {\n  cy.get('#pixel-board').should('be.belowOf', clearBtn);\n});",
              "err": {},
              "uuid": "2009af21-af85-498e-aa09-7470a0b947db",
              "parentUUID": "c8bece74-873f-4f25-8de8-fbfea308ae02",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se o texto do botão é 'Limpar'",
              "fullTitle": "9 - Crie um botão que, ao ser clicado, limpa o quadro preenchendo a cor de todos seus pixels com branco. Verifica se o texto do botão é 'Limpar'",
              "timedOut": null,
              "duration": 56,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('#clear-board').should('contain.text', 'Limpar');",
              "err": {},
              "uuid": "115a6c34-a9ba-437f-84ba-449151f202e4",
              "parentUUID": "c8bece74-873f-4f25-8de8-fbfea308ae02",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se ao clicar no botão, o quadro de pixels é totalmente preenchido de branco",
              "fullTitle": "9 - Crie um botão que, ao ser clicado, limpa o quadro preenchendo a cor de todos seus pixels com branco. Verifica se ao clicar no botão, o quadro de pixels é totalmente preenchido de branco",
              "timedOut": null,
              "duration": 4330,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').eq(1).then(function (color) {\n  var backgroundColor = color.css('background-color');\n  cy.wrap(color).click();\n  cy.get('.pixel').each(function (pixel) {\n    cy.wrap(pixel).click().should('have.css', 'background-color', backgroundColor);\n  });\n});\ncy.get('#clear-board').click();\ncy.get('.pixel').each(function (pixel) {\n  cy.wrap(pixel).should('have.css', 'background-color', WHITE);\n});",
              "err": {
                "message": "CypressError: Timed out retrying: expected '<div.pixel>' to have CSS property 'background-color' with the value 'rgb(255, 0, 0)', but the value was 'rgb(255, 255, 255)'",
                "estack": "CypressError: Timed out retrying: expected '<div.pixel>' to have CSS property 'background-color' with the value 'rgb(255, 0, 0)', but the value was 'rgb(255, 255, 255)'\n    at cypressErr (http://localhost:39095/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:39095/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:39095/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:39095/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:39095/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:39095/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:39095/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:39095/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:39095/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:39095/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:39095/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:39095/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:39095/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "92b004e1-0334-4c51-bc88-6fe3af890343",
              "parentUUID": "c8bece74-873f-4f25-8de8-fbfea308ae02",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "6093259a-9dfa-47fc-8c4b-fd79fcc88478",
            "2009af21-af85-498e-aa09-7470a0b947db",
            "115a6c34-a9ba-437f-84ba-449151f202e4"
          ],
          "failures": [
            "92b004e1-0334-4c51-bc88-6fe3af890343"
          ],
          "pending": [],
          "skipped": [],
          "duration": 4566,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "e3bff95e-6fd1-46e9-aa13-9a9165fffef1",
          "title": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se existe um input com o id `board-size`",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se existe um input com o id `board-size`",
              "timedOut": null,
              "duration": 119,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('#board-size').should('be.visible');",
              "err": {},
              "uuid": "6d083e25-6c0d-4747-b853-8b8e2411ff2a",
              "parentUUID": "e3bff95e-6fd1-46e9-aa13-9a9165fffef1",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se existe um botão com o id `generate-board`",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se existe um botão com o id `generate-board`",
              "timedOut": null,
              "duration": 80,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('#generate-board').should('be.visible');",
              "err": {},
              "uuid": "cdd7860c-156e-48d2-a771-699016a72044",
              "parentUUID": "e3bff95e-6fd1-46e9-aa13-9a9165fffef1",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se o input só aceita número maiores que zero. Essa restrição deve ser feita usando os atributos do elemento `input`",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se o input só aceita número maiores que zero. Essa restrição deve ser feita usando os atributos do elemento `input`",
              "timedOut": null,
              "duration": 4198,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#board-size[type=\\'number\\'][min=\\'1\\']');",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#board-size[type='number'][min='1']', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#board-size[type='number'][min='1']', but never found it.\n    at cypressErr (http://localhost:39095/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:39095/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:39095/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:39095/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:39095/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:39095/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:39095/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:39095/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:39095/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:39095/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:39095/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:39095/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:39095/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "139b6f09-2861-48d6-aeec-30bf5374eaf5",
              "parentUUID": "e3bff95e-6fd1-46e9-aa13-9a9165fffef1",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se o botão contém o texto 'VQV'",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se o botão contém o texto 'VQV'",
              "timedOut": null,
              "duration": 104,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('#generate-board').contains(/vqv/i);",
              "err": {},
              "uuid": "d7953261-d87b-4612-973c-dfb5e2e3863b",
              "parentUUID": "e3bff95e-6fd1-46e9-aa13-9a9165fffef1",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se o input está posicionado entre a paleta de cores e o quadro de pixels",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se o input está posicionado entre a paleta de cores e o quadro de pixels",
              "timedOut": null,
              "duration": 103,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('#color-palette').then(function (palette) {\n  cy.get('#board-size').should('be.belowOf', palette);\n});\ncy.get('#board-size').then(function (palette) {\n  cy.get('#pixel-board').should('be.belowOf', palette);\n});",
              "err": {},
              "uuid": "2e88e5e5-0911-4eeb-913f-f6b9e952ef88",
              "parentUUID": "e3bff95e-6fd1-46e9-aa13-9a9165fffef1",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se o botão está posicionado ao lado do input",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se o botão está posicionado ao lado do input",
              "timedOut": null,
              "duration": 75,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('#board-size').then(function (board) {\n  cy.get('#generate-board').should('be.onTheRightOf', board);\n});",
              "err": {},
              "uuid": "926be2e0-41ff-4e5f-896c-46006bf9b2f6",
              "parentUUID": "e3bff95e-6fd1-46e9-aa13-9a9165fffef1",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se nenhum valor for colocado no input ao clicar no botão, um `alert` é exibido com o texto: 'Board inválido!'",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se nenhum valor for colocado no input ao clicar no botão, um `alert` é exibido com o texto: 'Board inválido!'",
              "timedOut": null,
              "duration": 279,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "var alerted = false;\ncy.on('window:alert', function (msg) {\n  return alerted = msg;\n});\ncy.get('#generate-board').click().then(function () {\n  return expect(alerted).to.match(/Board inválido!/i);\n});",
              "err": {
                "message": "AssertionError: expected false to match /Board inválido!/i",
                "estack": "AssertionError: expected false to match /Board inválido!/i\n    at getRet (http://localhost:39095/__cypress/runner/cypress_runner.js:136585:16)\n    at tryCatcher (http://localhost:39095/__cypress/runner/cypress_runner.js:167415:23)\n    at Function.Promise.attempt.Promise.try (http://localhost:39095/__cypress/runner/cypress_runner.js:164690:29)\n    at Context.thenFn (http://localhost:39095/__cypress/runner/cypress_runner.js:136599:23)\n    at Context.then (http://localhost:39095/__cypress/runner/cypress_runner.js:136971:21)\n    at Context.<anonymous> (http://localhost:39095/__cypress/runner/cypress_runner.js:148875:21)\n    at http://localhost:39095/__cypress/runner/cypress_runner.js:148351:33\n    at tryCatcher (http://localhost:39095/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:39095/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:39095/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromiseCtx (http://localhost:39095/__cypress/runner/cypress_runner.js:165445:10)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:39095/__cypress/runner/cypress_runner.js:162145:12)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:39095/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:39095/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "1b7a8bcd-e1fd-493f-bd6a-19a08acdf42b",
              "parentUUID": "e3bff95e-6fd1-46e9-aa13-9a9165fffef1",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se ao clicar no botão com um valor preenchido, o tamanho do board muda.",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se ao clicar no botão com um valor preenchido, o tamanho do board muda.",
              "timedOut": null,
              "duration": 4522,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#board-size').clear().type(10);\ncy.get('#generate-board').click();\ncy.get('.pixel').should('have.length', 100);",
              "err": {
                "message": "CypressError: Timed out retrying: Not enough elements found. Found '25', expected '100'.",
                "estack": "CypressError: Timed out retrying: Not enough elements found. Found '25', expected '100'.\n    at cypressErr (http://localhost:39095/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:39095/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:39095/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:39095/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:39095/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:39095/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:39095/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:39095/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:39095/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:39095/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:39095/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:39095/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:39095/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "f70e84b9-1646-483b-80c0-3e82068b8cac",
              "parentUUID": "e3bff95e-6fd1-46e9-aa13-9a9165fffef1",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se o novo quadro tem todos os pixels preenchidos com a cor branca",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se o novo quadro tem todos os pixels preenchidos com a cor branca",
              "timedOut": null,
              "duration": 4585,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#board-size').clear().type(6);\ncy.get('#generate-board').click();\ncy.get('.pixel').should('have.length', 36).each(function (pixel) {\n  expect(pixel).to.have.css('background-color', WHITE);\n});",
              "err": {
                "message": "CypressError: Timed out retrying: Not enough elements found. Found '25', expected '36'.",
                "estack": "CypressError: Timed out retrying: Not enough elements found. Found '25', expected '36'.\n    at cypressErr (http://localhost:39095/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:39095/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:39095/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:39095/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:39095/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:39095/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:39095/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:39095/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:39095/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:39095/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:39095/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:39095/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:39095/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "57881916-418b-43ff-a208-a0747eb71d8e",
              "parentUUID": "e3bff95e-6fd1-46e9-aa13-9a9165fffef1",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "6d083e25-6c0d-4747-b853-8b8e2411ff2a",
            "cdd7860c-156e-48d2-a771-699016a72044",
            "d7953261-d87b-4612-973c-dfb5e2e3863b",
            "2e88e5e5-0911-4eeb-913f-f6b9e952ef88",
            "926be2e0-41ff-4e5f-896c-46006bf9b2f6"
          ],
          "failures": [
            "139b6f09-2861-48d6-aeec-30bf5374eaf5",
            "1b7a8bcd-e1fd-493f-bd6a-19a08acdf42b",
            "f70e84b9-1646-483b-80c0-3e82068b8cac",
            "57881916-418b-43ff-a208-a0747eb71d8e"
          ],
          "pending": [],
          "skipped": [],
          "duration": 14065,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "eff752ef-7b98-4e29-8246-2c9b56bd1dba",
          "title": "11 - Limite o tamanho mínimo e máximo do board.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se a altura máxima do board é 50",
              "fullTitle": "11 - Limite o tamanho mínimo e máximo do board. Verifica se a altura máxima do board é 50",
              "timedOut": null,
              "duration": 4556,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#board-size').clear().type(50);\ncy.get('#generate-board').click();\ncy.get('.pixel').should('have.length', 2500);",
              "err": {
                "message": "CypressError: Timed out retrying: Not enough elements found. Found '25', expected '2500'.",
                "estack": "CypressError: Timed out retrying: Not enough elements found. Found '25', expected '2500'.\n    at cypressErr (http://localhost:39095/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:39095/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:39095/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:39095/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:39095/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:39095/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:39095/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:39095/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:39095/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:39095/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:39095/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:39095/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:39095/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "e15e1eeb-fe9e-4def-a636-0e0fb74ed7f9",
              "parentUUID": "eff752ef-7b98-4e29-8246-2c9b56bd1dba",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se a altura do board é 5 quando um valor menor é colocado no input",
              "fullTitle": "11 - Limite o tamanho mínimo e máximo do board. Verifica se a altura do board é 5 quando um valor menor é colocado no input",
              "timedOut": null,
              "duration": 453,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('#board-size').clear().type(4);\ncy.get('#generate-board').click();\ncy.get('.pixel').should('have.length', 25);",
              "err": {},
              "uuid": "a67a9776-c7e4-4d99-aee1-d9d90600df5b",
              "parentUUID": "eff752ef-7b98-4e29-8246-2c9b56bd1dba",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se a altura do board é 50 quando um valor maior é colocado no input",
              "fullTitle": "11 - Limite o tamanho mínimo e máximo do board. Verifica se a altura do board é 50 quando um valor maior é colocado no input",
              "timedOut": null,
              "duration": 4550,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#board-size').clear().type(51);\ncy.get('#generate-board').click();\ncy.get('.pixel').should('have.length', 2500);",
              "err": {
                "message": "CypressError: Timed out retrying: Not enough elements found. Found '25', expected '2500'.",
                "estack": "CypressError: Timed out retrying: Not enough elements found. Found '25', expected '2500'.\n    at cypressErr (http://localhost:39095/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:39095/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:39095/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:39095/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:39095/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:39095/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:39095/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:39095/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:39095/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:39095/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:39095/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:39095/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:39095/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "82b0a51b-2066-4c2d-88fa-54c320eb74f4",
              "parentUUID": "eff752ef-7b98-4e29-8246-2c9b56bd1dba",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "a67a9776-c7e4-4d99-aee1-d9d90600df5b"
          ],
          "failures": [
            "e15e1eeb-fe9e-4def-a636-0e0fb74ed7f9",
            "82b0a51b-2066-4c2d-88fa-54c320eb74f4"
          ],
          "pending": [],
          "skipped": [],
          "duration": 9559,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "a5c7b46a-d7d4-4ba7-a4a7-dd4ddecda05d",
          "title": "12 - Faça com que as cores da paleta sejam geradas aleatoriamente ao carregar a página.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se as cores geradas na paleta são diferentes a cada carregamento da página",
              "fullTitle": "12 - Faça com que as cores da paleta sejam geradas aleatoriamente ao carregar a página. Verifica se as cores geradas na paleta são diferentes a cada carregamento da página",
              "timedOut": null,
              "duration": 342,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').then(function (colors) {\n  var currentColors;\n  var previousColors;\n  previousColors = Array.from(colors).map(function (color) {\n    return Cypress.$(color).css('background-color');\n  });\n  for (var i = 0; i < 5; i += 1) {\n    cy.reload();\n    cy.get('.color').then(function (colors) {\n      currentColors = Array.from(colors).map(function (color) {\n        return Cypress.$(color).css('background-color');\n      });\n      expect(currentColors).not.to.deep.equal(previousColors);\n      previousColors = currentColors;\n    });\n  }\n});",
              "err": {
                "message": "AssertionError: expected [ Array(4) ] to not deeply equal [ Array(4) ]",
                "estack": "AssertionError: expected [ Array(4) ] to not deeply equal [ Array(4) ]\n    at getRet (http://localhost:39095/__cypress/runner/cypress_runner.js:136585:16)\n    at tryCatcher (http://localhost:39095/__cypress/runner/cypress_runner.js:167415:23)\n    at Function.Promise.attempt.Promise.try (http://localhost:39095/__cypress/runner/cypress_runner.js:164690:29)\n    at Context.thenFn (http://localhost:39095/__cypress/runner/cypress_runner.js:136599:23)\n    at Context.then (http://localhost:39095/__cypress/runner/cypress_runner.js:136971:21)\n    at Context.<anonymous> (http://localhost:39095/__cypress/runner/cypress_runner.js:148875:21)\n    at http://localhost:39095/__cypress/runner/cypress_runner.js:148351:33\n    at tryCatcher (http://localhost:39095/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:39095/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:39095/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromiseCtx (http://localhost:39095/__cypress/runner/cypress_runner.js:165445:10)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:39095/__cypress/runner/cypress_runner.js:162145:12)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:39095/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:39095/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": ""
              },
              "uuid": "3402f50e-6880-46c9-8b5b-519f49e27d7e",
              "parentUUID": "a5c7b46a-d7d4-4ba7-a4a7-dd4ddecda05d",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se a cor preta ainda está presente e é a primeira na sua paleta de cores",
              "fullTitle": "12 - Faça com que as cores da paleta sejam geradas aleatoriamente ao carregar a página. Verifica se a cor preta ainda está presente e é a primeira na sua paleta de cores",
              "timedOut": null,
              "duration": 306,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').then(function (colors) {\n  var currentColors;\n  var previousColors;\n  previousColors = Array.from(colors).map(function (color) {\n    return Cypress.$(color).css('background-color');\n  });\n  expect(previousColors[0]).to.eq(BLACK);\n  for (var i = 0; i < 5; i += 1) {\n    cy.reload();\n    cy.get('.color').then(function (colors) {\n      currentColors = Array.from(colors).map(function (color) {\n        return Cypress.$(color).css('background-color');\n      });\n      expect(currentColors[0]).to.eq(BLACK);\n      expect(currentColors).not.to.deep.equal(previousColors);\n      previousColors = currentColors;\n    });\n  }\n});",
              "err": {
                "message": "AssertionError: expected [ Array(4) ] to not deeply equal [ Array(4) ]",
                "estack": "AssertionError: expected [ Array(4) ] to not deeply equal [ Array(4) ]\n    at getRet (http://localhost:39095/__cypress/runner/cypress_runner.js:136585:16)\n    at tryCatcher (http://localhost:39095/__cypress/runner/cypress_runner.js:167415:23)\n    at Function.Promise.attempt.Promise.try (http://localhost:39095/__cypress/runner/cypress_runner.js:164690:29)\n    at Context.thenFn (http://localhost:39095/__cypress/runner/cypress_runner.js:136599:23)\n    at Context.then (http://localhost:39095/__cypress/runner/cypress_runner.js:136971:21)\n    at Context.<anonymous> (http://localhost:39095/__cypress/runner/cypress_runner.js:148875:21)\n    at http://localhost:39095/__cypress/runner/cypress_runner.js:148351:33\n    at tryCatcher (http://localhost:39095/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:39095/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:39095/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromiseCtx (http://localhost:39095/__cypress/runner/cypress_runner.js:165445:10)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:39095/__cypress/runner/cypress_runner.js:162145:12)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:39095/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:39095/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": ""
              },
              "uuid": "0f6c4ea3-d3aa-4ae2-bf43-09771e54d3ed",
              "parentUUID": "a5c7b46a-d7d4-4ba7-a4a7-dd4ddecda05d",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [],
          "failures": [
            "3402f50e-6880-46c9-8b5b-519f49e27d7e",
            "0f6c4ea3-d3aa-4ae2-bf43-09771e54d3ed"
          ],
          "pending": [],
          "skipped": [],
          "duration": 648,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    }
  ],
  "meta": {
    "mocha": {
      "version": "7.0.1"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": false,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false
      },
      "version": "4.1.0"
    },
    "marge": {
      "options": {
        "id": "default",
        "reportDir": "cypress/reports",
        "overwrite": true,
        "html": false,
        "json": true
      },
      "version": "4.1.0"
    }
  }
}